class Solution {
public:
    int numberOfSets(int n, int maxDistance, vector<vector<int>>& roads) {
        int res = 0;

        for(int set = 0; set < (1<<n); set++){
            vector<vector<int>> adj(n, vector<int>(n,1e9));

            for(auto it : roads){
                int u = it[0];
                int v = it[1];
                int wt = it[2];

                if((set >> u & 1) && (set >> v & 1)){
                    adj[u][v] = min(wt,adj[u][v]);
                    adj[v][u] = min(wt,adj[v][u]);
                }
            }

            for(int i=0; i<n; i++){
                adj[i][i] = 0;
            }
            
            //floyd warshall
            for(int via=0; via<n; via++){
                for(int i=0; i<n; i++){
                    for(int j=0; j<n; j++){
                        adj[i][j] = min(adj[i][j], adj[i][via] + adj[via][j]);
                    }
                }
            }

            //check shortest path
            bool flag = true;
            for(int i=0; i<n; i++){
                for(int j=0; j<n; j++){
                    if(i == j) continue;
                    if((set >> i & 1) && (set >> j & 1)){
                        if(adj[i][j] > maxDistance){
                            flag = false;
                            break;
                        }
                    }
                }
            }

            if(flag){
                res++;
            }
        }

        return res;
    }
};
