/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(head == NULL || head->next == NULL || k==0){
            return head;
        }
        ListNode *temp = head;
        ListNode *last = head;
        int cnt = 1;
        while(temp->next != NULL){
            cnt++;
            temp = temp->next;
            last = last->next;
        }
        if(k%cnt == 0){
            return head;
        }
        cnt -= (k%cnt);
        temp = head;
        cnt--;
        while(cnt--){
            temp = temp->next;
        }
        ListNode *nextnode = temp->next;
        last->next = head;
        temp->next = NULL;
        return nextnode;
    }
};
