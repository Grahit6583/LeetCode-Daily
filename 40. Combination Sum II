class Solution {
public:
    void solve(int i, int sum, vector<vector<int>> &ans, vector<int> &candidates, int n, vector<int> &vec){
        if(sum == 0){
            ans.push_back(vec);
            return;
        }


        for(int j=i; j<n; j++){
            if(j>i && candidates[j] == candidates[j-1]){
                continue;
            }
            if(candidates[j] > sum){
                break;
            }

            vec.push_back(candidates[j]);
            solve(j+1,sum-candidates[j],ans,candidates,n,vec);
            vec.pop_back();
        }
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        int n =candidates.size();
        sort(candidates.begin(),candidates.end());
        vector<vector<int>> ans;
        vector<int> vec;
        solve(0,target,ans,candidates,n,vec);
        return ans;
    }
};
