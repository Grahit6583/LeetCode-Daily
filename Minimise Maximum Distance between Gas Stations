int cntGasStations(vector<int> &arr, long double dist){
    int n = arr.size();
    
    int cnt = 0;
    for(int i=1; i<n; i++){
        int numBetween = (arr[i]-arr[i-1])/dist;
        if((arr[i]-arr[i-1])/dist == numBetween * dist){
            numBetween--;
        }
        cnt += numBetween;
    }
    
    return cnt;
}

long double gasStations(vector<int> &arr, int k){
    int n = arr.size();
    long double l = 0;
    long double h = 0;
    
    for(int i=0; i<n-1; i++){
        h = max(h,(long double)(arr[i+1] - arr[i]));
    }
    
    while(h-l > 1e-6){
        long double mid = (l+h)/2.0;
        int cnt = cntGasStations(arr,mid);
        if(cnt > k){
            l = mid;
        }
        else{
            h = mid;
        }
    }
    
    return h;
}
