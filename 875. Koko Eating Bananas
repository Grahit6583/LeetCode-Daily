class Solution {
public:
    long long solve(vector<int> &piles, int n, int m){
        long long hrs = 0;
        for(int i=0; i<n; i++){
            hrs += ((piles[i] + m - 1)/m);
        }
        return hrs;
    }
    int minEatingSpeed(vector<int>& piles, int h) {
        int n = piles.size();
        int l=1;
        int r=*max_element(begin(piles),end(piles));
        while(l<=r){
            int mid = (r+l)/2;
            long long k = solve(piles,n,mid);
            if(k<=h){
                r = mid-1;
            }
            else{
                l = mid+1;
            }
        }

        return l;
    }
};
