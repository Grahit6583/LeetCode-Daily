class Solution {
public:
    int mod = 1e9+7;
    int solve(int n, int i, int x, vector<vector<int>> &dp){
        if(n < 0){
            return 0;
        }

        if(n == 0){
            return 1;
        }
        if (i > n) return 0; 
        if(dp[n][i] != -1){
            return dp[n][i];
        }
        int sum = pow(i,x);
        if(sum > n){
            return 0;
        }

        int take = solve(n-sum, i+1, x, dp);
        int not_take = solve(n,i+1,x, dp);

        return dp[n][i] = (take % mod + not_take % mod) % mod;
    }
    int numberOfWays(int n, int x) {
        vector<vector<int>> dp(n+1,vector<int>(n+1,-1));
        return solve(n,1,x,dp);
    }
};
