class Solution {
public:
    bool solve(vector<int> &bloomDay, int mid, int m, int k, int n){
        int cnt = 0;
        int bouquets = 0;
        for(int i=0; i<n; i++){
            if(bloomDay[i] <= mid){
                cnt++;
            }
            else{
                bouquets += (cnt/k);
                cnt = 0;
            }
        }
        bouquets += (cnt/k);
        return bouquets >= m;
    }
    int minDays(vector<int>& bloomDay, int m, int k) {
        int n = bloomDay.size();
        if((long long)m*k > n){
            return -1;
        }
        int l = INT_MAX;
        int r = INT_MIN;
        for(int i=0; i<n; i++){
            l = min(bloomDay[i],l);
            r = max(bloomDay[i],r);
        }
        int ans = -1;
        while(l <= r){
            int mid = l+(r-l)/2;
            if(solve(bloomDay,mid,m,k,n)){
                r = mid-1;
            }
            else{
                l = mid+1;
            }
        }
        return l;
    }
};
