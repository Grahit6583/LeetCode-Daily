class Solution {
    bool checkCycle(int i, vector<int> &vis, vector<int> &pathVis, vector<vector<int>> &adj){
        vis[i] = 1;
        pathVis[i] = 1;

        for(auto it : adj[i]){
            if(!vis[it]){
                if(checkCycle(it,vis,pathVis,adj)){
                    return true;
                }
            }
            else if(pathVis[it]){
                return true;
            }
        }
        pathVis[i] = 0;
        return false;
    }
public:
    bool canFinish(int numCourses, vector<vector<int>>& pre) {
        vector<vector<int>> adj(numCourses);
        int n = pre.size();
        for(int i=0; i<n; i++){
            int u = pre[i][0];
            int v = pre[i][1];

            adj[u].push_back(v);
        }

        //check cycle
        vector<int> vis(numCourses,0);
        vector<int> pathVis(numCourses,0);
        for(int i=0; i<numCourses; i++){
            if(!vis[i]){
                if(checkCycle(i,vis,pathVis,adj)){
                    return false;
                }
            }
        }

        return true;
    }
};
