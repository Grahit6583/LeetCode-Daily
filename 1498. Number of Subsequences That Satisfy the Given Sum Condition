class Solution {
public:
    int M = 1e9 + 7;
    int numSubseq(vector<int>& nums, int target) {
        int n = nums.size();
        long long cnt = 0;
        sort(nums.begin(), nums.end());
        vector<int> pows(n, 1);
        for(int i = 1; i < n; i++) pows[i] = pows[i-1] * 2 % M;
        int i = 0;
        int j = n - 1;

        while (i <= j) {
            if (nums[i] + nums[j] <= target) {
                cnt = (cnt + pows[j-i]) % M;
                i++;
            } else {
                j--;
            }
        }

        return cnt;
    }
};
