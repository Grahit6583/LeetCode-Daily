class Solution {
public:
    long long minCost(vector<int>& basket1, vector<int>& basket2) {
        int n = basket1.size();

        map<int,int> mp;
        int mini = INT_MAX;

        for(int i=0; i<n; i++){
            mp[basket1[i]]++;
            mp[basket2[i]]--;
            mini = min(mini, basket1[i]);
            mini = min(mini, basket2[i]);
        }

        vector<int> res;
        for(auto it : mp){
            int cost = it.first;
            int cnt = it.second;
            if(cnt == 0){
                continue;
            }
            if(cnt % 2 != 0){
                return -1;
            }
            for(int i=1; i <= abs(cnt)/2; i++){
                res.push_back(cost);
            }
        }

        long long ans = 0;
        int t = res.size();
        for(int i=0; i<t/2; i++){
            ans += min(mini*2, res[i]);
        }

        return ans;
    }
};
