class Solution {
public:
    int maxEle(vector<vector<int>> &mat, int mid, int m){
        int ele = -1;
        int ind = -1;
        for(int i=0; i<m; i++){
            if(ele < mat[i][mid]){
                ind = i;
                ele = mat[i][mid];
            }
        }

        return ind;
    }
    vector<int> findPeakGrid(vector<vector<int>>& mat) {
        int n = mat[0].size();
        int m = mat.size();
        int l=0;
        int h = n-1;

        while(l<=h){
            int mid = (l+h)/2;
            int row = maxEle(mat,mid,m);
            int left = mid-1 >= 0 ? mat[row][mid-1] : -1;
            int right = mid+1 < n ? mat[row][mid+1] : -1;

            if(mat[row][mid] > left && mat[row][mid] > right){
                return {row,mid};
            }
            else if(left > mat[row][mid]){
                h = mid-1;
            }
            else{
                l = mid + 1;
            }
        }

        return {-1,-1};
    }
};
