class Solution {
public:
    bool canPartition(vector<int>& nums) {
        int n = nums.size();
        int sum = 0;
        for (int i = 0; i < n; i++) {
            sum += nums[i];
        }

        if (sum % 2 != 0) {
            return false;
        }
        int x = sum / 2;
        vector<bool> next(x+1,false);
        vector<bool> curr(x+1,false);
        next[0] = curr[0] = true;
        for (int i = n - 1; i >= 0; i--) {
            for (int j = 0; j <= x; j++) {
                bool take = false;
                if (j >= nums[i]) {
                    take = next[j - nums[i]];
                }

                bool not_take = next[j];

                curr[j] = take || not_take;
            }
            next = curr;
        }
        return next[x];
    }
};
