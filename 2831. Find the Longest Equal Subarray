class Solution {
public:
    int longestEqualSubarray(vector<int>& nums, int k) {
        int n = nums.size();
        unordered_map<int,vector<int>> mp;

        for(int i=0; i<n; i++){
            mp[nums[i]].push_back(i);
        }
        
        int result = 0;
        
        for (auto &entry : mp) {
            vector<int> &indices = entry.second;
            int m = indices.size();
            int l = 0, cost = 0;
            
            for (int r = 0; r < m; r++) {
                if (r > 0)
                    cost += indices[r] - indices[r - 1] - 1;
                
                while (l < r && cost > k) {
                    cost -= indices[l + 1] - indices[l] - 1;
                    l++;
                }
            
                result = max(result, r - l + 1);
            }
        }
        
        return result;
    }
};
