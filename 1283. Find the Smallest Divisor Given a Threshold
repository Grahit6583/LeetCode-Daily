class Solution {
public:
    bool solve(vector<int> &nums, int threshold, int div){
        int n = nums.size();
        int cnt = 0;
        for(int i=0; i<n; i++){
            cnt += ((nums[i] + div - 1)/div);
        }

        return cnt <= threshold;
    }
    int smallestDivisor(vector<int>& nums, int threshold) {
        int l = 1;
        int r = *max_element(nums.begin(),nums.end());
        if(threshold < nums.size()) return -1;
        while(l <= r){
            int mid = l + (r-l) / 2;
            if(solve(nums,threshold,mid)){
                r = mid-1;
            }
            else{
                l = mid+1;
            }
        }

        return l;
    }
};
