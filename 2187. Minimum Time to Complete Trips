class Solution {
public:
    long long trips_done_in_time(long long mid,vector<int>&time,int n,int totalTrips){
        long long trips = 0;
        for(int i=0; i<n; i++){
            trips += (mid/time[i]);
            if(trips >= totalTrips) return trips;
        }

        return trips;
    }
    long long minimumTime(vector<int>& time, int totalTrips) {
        int n = time.size();
        int maxi = INT_MAX;
        for(int i=0; i<n; i++){
            maxi = min(maxi,time[i]);
        }

        long long l=1;
        long long h = (long long)totalTrips * maxi;
        while(l<h){
            long long mid = l+(h-l)/2;
            long long trips = trips_done_in_time(mid,time,n,totalTrips);

            if(trips >= totalTrips){
                h = mid;
            }
            else{
                l = mid+1;
            }
        }

        return l;
    }
};
